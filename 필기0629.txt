mvc모델 - 디자이너와 서버를 명확히 나눔. 그걸 자바스크립트로 구현한게 mvc패턴.  mvc 모델이 가장 중요하다.
스프링이 mvc구조를 따라갈수 있도록 구성되어있고, 그럼 웹퍼블리셔가 디자이너 부분을 담당하게 되면 백엔드는 서버를 ,, 서버를 db에 대한 중요도가 매우 높아진다.

오늘의 학습목표 
JSP 
1.ajax을 활용하고
2.mvc모델을 이해하고 





--AJAX설명 
Ajax는 JavaScript의 라이브러리중 하나이며 Asynchronous Javascript And Xml(비동기식 자바스크립트와 xml)의 약자입니다. 
브라우저가 가지고있는 XMLHttpRequest 객체를 이용해서 전체 페이지를 새로 고치지 않고도 페이지의 일부만을 위한 데이터를 로드하는 기법 이며 
Ajax를 한마디로 정의하자면 JavaScript를 사용한 비동기 통신, 클라이언트와 서버간에 XML 데이터를 주고받는 기술이라고 할 수 있겠습니다.

비동기 방식이란: 웹페이지를 리로드 하지 않고 데이터를 불러오는 방식이다.

--AJAX를 왜 사용하는가?  
기본적으로 HTTP프로토콜은 클라이언트쪽에서 Request를 보내고 Server쪽에서 Response를 받으면 이어졌던 연결이 끊기게 되어있습니다.
하지만 ajax는 html페이지의 일부분만 갱신할 수 있도록 XML HttpRequest객체를 통해 서버에 request를 합니다.



--AJAX와 Jquery의 시너지

일반 Javascript만으로 Ajax를 하게되면 코딩량도 많아지고 브라우저별로 구현방법이 다른 단점이 있는데 jquery를 이용하면 더 적은 코딩량과 동일한 코딩방법으로 대부분의 브라우저에서 같은 동작을 할 수 있게 됩니다.
jquery ajax를 사용하면, HTTP Get방식과 HTTP Post방식 모두를 사용하여 원격 서버로부터 데이터를 요청할 수 있습니다. Jquery는 Ajax처럼 JavaScript의 라이브러리 중 하나인데 자바스크립트를 좀 더 사용하기 쉽게 패키징화 시켜놓은 것입니다.

--마크업?
마크업 언어(markup 言語, markup language)는 태그 등을 이용하여 문서나 데이터의 구조를 명기하는 언어의 한 가지이다
<h1> </h1>

--XML 페이지란?? 
 XML을 이용하면 어디부터 어디까지가 데이터 이름이고 어디부터 어디까지가 실제 데이터이며 어디부터 어디까지가 데이터 단위인지도 표현이 가능하다. 
마크업 확장판
<BOOKS>
	<BOOK>
		<NUMBER>1</NUMBER>
		<BOOKNAME>로미오</BOOKNAME>

--자바스크립트란??

--HTTP란??
웹클라이언트와 웹서버간의 통신할때 TCP를 사용하여 서로 통신하게 만드는 프로토콜(HTTP프로토콜을 기반으로 동작한다) 

--웹서버??
정적인 파일을 제공하기 위한 서버. WAS로 요청하지 않고 단독으로 처리.



-- N-TIER (N 계층 아키텍처 스타일)
2티어 구성이 고객과 DB간의 구조

N티어를 봤을떄 클라이언트 생산부가 생산부 서버,웹페이징를 가지고 있는데 서버에서 인사부 서버로 요청을하고 인사부서버가 응답하고 DB를 확인해줌
각각을 N티어라고 부르고, 현재 회사는 모두 N티어구조다. 

네이버와 YES24를 예를 들어서
YES24는 자신의 웹서버를 가지고 있다. 자신의 DB도 가지고 있고 .
네이버도 자신의 웹서버

클라이언트(나) -> 네이버에 접속 (네이버는 랜러딩을 해서 )->클라이언트로 네이버를 보여줌

클라이언트(나) -> 네이버에 접속해서 YSE24를 보려고 하면 (네이버는 랜러딩을 해서 ) 네이버가 YSE24의 DB를 연동할수도 있다.(이건 미친짓.. 네이버도 DB낭비, YES24가 오라클 계정을 열어주면 보안문제 존나발생)->

클라이언트(나) -> 네이버에 접속해서 YSE24를 보려고 하면 (네이버는 랜러딩을 해서 ) -> YES 24는 웹서버에 JSP파일을 만들어둠-> 그럼 네이버,다음,카카오 모두 YES24의 JSP의 주소에 연결한다.그럼 간단하지.


카드사..가 가장 대표적이다. 카드사는 자신들의 웹서버 구축하고 클라이언트에게 노출되는게 아니라 HTTP로 구성되어 있는것을 WAS라고 함... JSP파일을 열어주고 다른 쇼핑몰, 뭐 가맹점에서 접근할수 있도록

 XML방식으로 주고 받는 순간 그럼 굉장히 편하긴 함. 




--TABLE
TABLE은 TD TR로 엄청 간단하게 만드는데 왜 DIV를 주고 ID를 줘서 각각의 STYLE을 먹이는지..왜 불편하게..
근데 N-TIER을 보면 HTTP로 통신을 하게 되면 테이블은 비동기방식이라도 그 전체를 넘겨줘야함.. 
얼마나 바보같은 짓이야.생산부서가 인사부의 DB를 요청하려는데 그 전체가 아니라  나는 그 부분만 필요하게 되니깐 이렇게 각각의 비동기방식으로 HTML로 전달할 수 가 있다. 

인사부(서버,클라이언트) 	<----요청(인사부 자료)	생산부(서버,클라이언트)		
-DB		
-JSP



JSP의 단점은 자바코드랑 HTML코드가 혼재되어 있어서 편하기는 하지만 SM하기에는 너무 복잡하고 너무 힘들다.
JSP의 또 다른 단점은 스타일시트도도 마음대로 못 바꾸고, 항상 WRITE->WRITE_OK->LIST로 불러오는 전체 페이지를 계속 반복해야한다.
즉 SUBMIT을 하면 그 전체(한 웹페이지 전체)를 서버로 보내고 결과를 받는거자녜..

랜더링 : 클라이언트가 요청하면 뭐 JAVA, 이것저것 스크립트와 HTML로 바꿔주고 그 결과를 보여줌. 



JSP의 전체페이지 새로고침 문제를 IFRAME이 해결했는데 스타일시트에 문제가 생김-> 다시 그걸 AJON이 해결함(비동기방식)
클라이언트는 버튼을 클릭하는 순간 JAVASCRIPT를 호출했다. 


